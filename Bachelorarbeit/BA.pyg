def Shor_sequential(a: int, N: int,number_shots: int = 1000, backend: str = "aer_simulator"):
  n = N.bit_length()
  controlling_qubit = 0
  ev_qbits  = range(1, 2*n+3)
  k = range(2*n)
  qc = qiskit.QuantumCircuit(2*n+3, 2*n)
  qc.x(1)
  for target in k:
    qc.h(0)
    qc.append(U_gate(n,dezToBin(mod_exp(a, 2**(len(k)-target-1), N),n+1),
        dezToBin(N,n+1)),[0]+list(ev_qbits))
    iterative_QFT(target,qc,k,controlling_qubit)
    qc.measure(controlling_qubit,k[target])
    qc.x(0).c_if(k[target],1)
  simulator = qiskit.Aer.get_backend(backend)
  sim_result = qiskit.execute(qc, backend=simulator, shots=number_shots).result()
  return sim_result.get_counts(qc)
